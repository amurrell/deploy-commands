#!/usr/bin/env bash

DEPLOYING_FROM=$(pwd)

H=$(sed -e 's#.*\-h=\([^[:space:]]*\?\).*#\1#' <<< "$*")
V=$(sed -e 's#.*\-v=\([^[:space:]]*\?\).*#\1#' <<< "$*")

if [ "$H" == "-h" ]; then
    printf "Use -v to specify release (eg. tag name)\n"
    exit 1;
fi

if [ "$V" == "$*" ]; then
    printf "You must specify which version folder to deploy - eg. -v=1.0.1\n"
    exit 1
else
    VERSION=$V
fi

# Put test commands in test_command file
if [ -f test_command ]; then
    TEST_CMD=$(<test_command)
fi

# Put reload commands in reload_command file
if [ -f reload_command ]; then
    RELOAD_CMD=$(<reload_command)
fi

printf "Going to deploy $V\n"

# Get one level up, out of commands
cd ../releases

# Update the symbolic link current
BASEPATH=$(pwd)
NEWPATH="$BASEPATH/$VERSION"
printf "${NEWPATH}\n"

# Go back to commands, then one level up, where current symlink is
cd $DEPLOYING_FROM
cd ../

ln -sfn $NEWPATH current

# Go back into commands
cd $DEPLOYING_FROM

# Test CMD - then if reload command exists, run it if 0 (good) exit code.
if [ "$TEST_CMD" != '' ]; then
    printf "==== ⏳ Detected TEST Command, so running TEST command...\n"
    
    eval $TEST_CMD

    status=$?

    if [ $status -eq 0 ]; then
        printf "==== ✅ Test Command: SUCCESS\n"

        # If reload command exists, run it
        if [ "$RELOAD_CMD" != '' ]; then
            printf "==== ⏳ Detected RELOAD Command, so running RELOAD command...\n"
            eval $RELOAD_CMD
            status=$?

            if [ $status -eq 0 ]; then
                printf "==== ✅ Reload Command: SUCCESS\n"
            else
                printf "==== ❌ Reload Command: FAILED\n"
            fi
        fi
        
    else
        printf "==== ❌ Test Command: FAIL\n"
        exit 1
    fi
    
fi
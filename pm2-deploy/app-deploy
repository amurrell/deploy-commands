#!/usr/bin/env bash

# Put server name in a relative file appservername
if [ -f appservername ]; then
    SERVER=$(<appservername)
fi

H=$(sed -e 's#.*\-h=\([^[:space:]]*\?\).*#\1#' <<< "$*")
S=$(sed -e 's#.*\-s=\([^[:space:]]*\?\).*#\1#' <<< "$*")
V=$(sed -e 's#.*\-v=\([^[:space:]]*\?\).*#\1#' <<< "$*")

if [ "$H" == "-h" ]; then
    printf "Use -s to specify name of server in pm2, eg. -s=myapp-server\n"
    printf "Use -v to specify release (eg. tag name)\n"
    exit 1;
fi

if [ "$V" == "$*" ]; then
    printf "You must specify which version folder to deploy - eg. -v=1.0.1\n"
    exit 1
else
    VERSION=$V
fi

# Put the directory owner user into owner_user to change it from www-data
if [ -f owner_user ]; then
    OWNER_USER=$(<owner_user)
else
    OWNER_USER='www-data'
fi

# Put the directory owner group into owner_group to change it from www-data
if [ -f owner_group ]; then
    OWNER_GROUP=$(<owner_group)
else
    OWNER_GROUP='www-data'
fi

# Check that either -s or server (appservername) are set
if [ "$S" == "$*" ] && [ "$SERVER" == "" ]; then
    printf "You must specify which pm2 app server to use - eg. -s=someserver\n"
    exit 1
else
    # Set server, whether using the appservername or -s
    if [ "$S" == "$*" ]; then
        SERVER=${SERVER}
    else
        SERVER=$S
    fi
fi

printf "Going to deploy $V\n"

# Get one level up, out of commands
cd ../

# Update the symbolic link current
BASEPATH=$(pwd)
NEWPATH="$BASEPATH/$VERSION"
printf "${NEWPATH}\n"

# Create symoblic link
ln -sfn $NEWPATH current

# fix permissions on symbolic link
sudo chown -h $OWNER_USER:$OWNER_GROUP current

# reload the server
CMD="pm2 reload $SERVER"

eval $CMD

# Go back into commands
cd commands